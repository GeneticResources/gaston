// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>
#include "matrix-varia.h"

using namespace Rcpp;

// pas le plus efficace (copie du résultat) mais bon on s'en fiche pour le moment
// sinon il faudrait faire une version qui travaille sur une mapped matrix
// [[Rcpp::export]]
List inverse_symmetric_matrix(NumericMatrix X, double eps) {
  double log_det, det;
  MatrixXd x(as<MatrixXd> (X)); // ceci réalise une copie donc on n'a pas à ce soucier du caractère destructif...
  MatrixXd xi(x.rows(),x.rows());
  sym_inverse(x, xi, log_det, det, eps);
  List L;
  L["inverse"] = wrap(xi);
  L["det"] = det;
  L["log_det"] = log_det;
  return L;
}

RcppExport SEXP ism(SEXP X_, SEXP eps_) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(X_ );
        Rcpp::traits::input_parameter< double >::type eps(eps_ );
        List __result = inverse_symmetric_matrix(X, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}

